{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\frontend\\\\p240624\\\\movie\\\\client\\\\src\\\\components\\\\LandingPage\\\\LandingPage.js\",\n  _s = $RefreshSig$();\nimport { Button, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../Config';\nimport AntCard from '../commons/AntCard';\nimport MainImage from './Section/MainImage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LandingPage() {\n  _s();\n  // useEffect : React에게 컴포넌트가 렌더링 이후에 어떤 일을 수행해야하는 지를 말함\n  // 클라이언트가 서버에게 요청할 때 서버가 응답이 느릴 경우 \n  // 서버가 요청이 올 때까지 작업을 못하니까 비동기 처리할 것\n  // => 서버에 요청할 땐 비동기 처리할 것\n\n  const navigate = useNavigate();\n\n  // [state]\n  const [Movies, setMovies] = useState([]);\n  const [MainMovieImage, setMainMovieImage] = useState(null); // 첫 번째로 받은 data 를 메인 이미지로 지정, 값이 안 올 수 있기 때문에 기본값을 null\n  const [CurrentPage, setCurrentPage] = useState(0); // 0 페이지는 없으니 1 페이지부터 !\n\n  useEffect(() => {\n    const page = 1; // 시작할 땐 1 페이지니까 여기서 상태 설정 하지 않음\n    fetchMovies(page);\n  }, []);\n  const loadMoreItems = () => {\n    fetchMovies(CurrentPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/items\",\n        children: \"items \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/items\",\n        children: \"[a \\uD0DC\\uADF8] Items \\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [MainMovieImage && /*#__PURE__*/_jsxDEV(MainImage, {\n        image: `${IMAGE_BASE_URL}w1280${MainMovieImage.poster_path}`,\n        title: `${MainMovieImage.title}`,\n        overview: `${MainMovieImage.overview}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(1),\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '85%',\n          margin: '1rem auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC0C8\\uB85C \\uB098\\uC628 \\uC601\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [10, 10],\n          children: Movies.map(movie => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(AntCard, {\n                landingPage: true,\n                path: `${IMAGE_BASE_URL}w400${movie.poster_path}`,\n                title: movie.title,\n                movieId: movie.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          margin: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadMoreItems,\n          children: \"\\uB354\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  function fetchMovies(page) {\n    const endpoint = `${API_URL}popular?api_key=${API_KEY}&language=en-US&page=${page}`;\n    fetch(endpoint) // 요청\n    .then(res => res.json()) // 응답 : 객체변환\n    .then(res => {\n      // console.log(res.results);\n      setMovies([...Movies, ...res.results]); // 전개 연산자 : 배열 또는 객체를 하나하나 넘기는 용도\n      setMainMovieImage(res.results[0]);\n      setCurrentPage(res.page);\n    });\n  }\n}\n_s(LandingPage, \"3Zt/eHQnDd8v2HspZZlI7OEwLNM=\", false, function () {\n  return [useNavigate];\n});\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["Button","Row","React","useEffect","useState","useNavigate","API_KEY","API_URL","IMAGE_BASE_URL","AntCard","MainImage","jsxDEV","_jsxDEV","Fragment","_Fragment","LandingPage","_s","navigate","Movies","setMovies","MainMovieImage","setMainMovieImage","CurrentPage","setCurrentPage","page","fetchMovies","loadMoreItems","children","Link","to","fileName","_jsxFileName","lineNumber","columnNumber","href","style","width","image","poster_path","title","overview","textAlign","margin","onClick","gutter","map","movie","landingPage","path","movieId","id","display","justifyContent","endpoint","fetch","then","res","json","results","_c","$RefreshReg$"],"sources":["D:/fullstack/frontend/p240624/movie/client/src/components/LandingPage/LandingPage.js"],"sourcesContent":["import { Button, Row } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../Config';\r\nimport AntCard from '../commons/AntCard';\r\nimport MainImage from './Section/MainImage';\r\n\r\n\r\nfunction LandingPage() {\r\n  // useEffect : React에게 컴포넌트가 렌더링 이후에 어떤 일을 수행해야하는 지를 말함\r\n  // 클라이언트가 서버에게 요청할 때 서버가 응답이 느릴 경우 \r\n  // 서버가 요청이 올 때까지 작업을 못하니까 비동기 처리할 것\r\n  // => 서버에 요청할 땐 비동기 처리할 것\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // [state]\r\n  const [Movies, setMovies] = useState([]);\r\n  const [MainMovieImage, setMainMovieImage] = useState(null); // 첫 번째로 받은 data 를 메인 이미지로 지정, 값이 안 올 수 있기 때문에 기본값을 null\r\n  const [CurrentPage, setCurrentPage] = useState(0); // 0 페이지는 없으니 1 페이지부터 !\r\n\r\n  useEffect(() => {\r\n    const page = 1; // 시작할 땐 1 페이지니까 여기서 상태 설정 하지 않음\r\n    fetchMovies(page);\r\n  }, []);\r\n\r\n  const loadMoreItems = () => {\r\n    fetchMovies(CurrentPage + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Link to='/items'>items 이동</Link> &nbsp;&nbsp;\r\n        <a href='/items'>[a 태그] Items 로 이동</a>\r\n      </div>\r\n      <div style={{ width: '100%' }}>\r\n        {/* Main Image : 웹 브라우저 꽉차게 */}\r\n        {MainMovieImage &&\r\n          <MainImage\r\n            image={`${IMAGE_BASE_URL}w1280${MainMovieImage.poster_path}`}\r\n            title={`${MainMovieImage.title}`}\r\n            overview={`${MainMovieImage.overview}`}\r\n          />\r\n        }\r\n\r\n        {/* 다음 버튼 */}\r\n        <div style={{ textAlign: 'center', margin: '20px' }}>\r\n          <Button onClick={() => navigate(1)}>다음</Button>\r\n        </div>\r\n\r\n        <div style={{ width: '85%', margin: '1rem auto' }}>\r\n          <h2>새로 나온 영화</h2>\r\n          <hr />\r\n\r\n          {/* Movie Grid Card : 웹 브라우저 안 쪽으로 좀 들어가게 */}\r\n          <Row gutter={[10, 10]}>\r\n            {/* 6개의 컬럼이 오기 위해서 map 을 통해서 반복문 구현 */}\r\n            {Movies.map(movie => {\r\n              return (\r\n                <React.Fragment key={movie.id}>\r\n                  <AntCard\r\n                    landingPage\r\n                    path={`${IMAGE_BASE_URL}w400${movie.poster_path}`}\r\n                    title={movie.title}\r\n                    movieId={movie.id}\r\n                  />\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Row>\r\n        </div>\r\n\r\n        {/* 더보기 버튼 */}\r\n        <div style={{ display: 'flex', justifyContent: 'center', margin: '20px' }}>\r\n          <Button onClick={loadMoreItems}>더보기</Button>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  function fetchMovies(page) {\r\n    const endpoint = `${API_URL}popular?api_key=${API_KEY}&language=en-US&page=${page}`;\r\n\r\n    fetch(endpoint) // 요청\r\n      .then(res => res.json()) // 응답 : 객체변환\r\n      .then(res => {\r\n        // console.log(res.results);\r\n        setMovies([...Movies, ...res.results]); // 전개 연산자 : 배열 또는 객체를 하나하나 넘기는 용도\r\n        setMainMovieImage(res.results[0]);\r\n        setCurrentPage(res.page);\r\n      });\r\n  }\r\n}\r\n\r\nexport default LandingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}